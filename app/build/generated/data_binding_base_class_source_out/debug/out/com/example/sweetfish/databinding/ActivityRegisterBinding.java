// Generated by view binder compiler. Do not edit!
package com.example.sweetfish.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.sweetfish.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegisterBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CircleImageView cover;

  @NonNull
  public final EditText editCode;

  @NonNull
  public final EditText editMail;

  @NonNull
  public final EditText editPassword;

  @NonNull
  public final EditText editUsername;

  @NonNull
  public final Button register;

  @NonNull
  public final Button sendCode;

  @NonNull
  public final TextView title;

  private ActivityRegisterBinding(@NonNull LinearLayout rootView, @NonNull CircleImageView cover,
      @NonNull EditText editCode, @NonNull EditText editMail, @NonNull EditText editPassword,
      @NonNull EditText editUsername, @NonNull Button register, @NonNull Button sendCode,
      @NonNull TextView title) {
    this.rootView = rootView;
    this.cover = cover;
    this.editCode = editCode;
    this.editMail = editMail;
    this.editPassword = editPassword;
    this.editUsername = editUsername;
    this.register = register;
    this.sendCode = sendCode;
    this.title = title;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_register, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegisterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cover;
      CircleImageView cover = ViewBindings.findChildViewById(rootView, id);
      if (cover == null) {
        break missingId;
      }

      id = R.id.editCode;
      EditText editCode = ViewBindings.findChildViewById(rootView, id);
      if (editCode == null) {
        break missingId;
      }

      id = R.id.editMail;
      EditText editMail = ViewBindings.findChildViewById(rootView, id);
      if (editMail == null) {
        break missingId;
      }

      id = R.id.editPassword;
      EditText editPassword = ViewBindings.findChildViewById(rootView, id);
      if (editPassword == null) {
        break missingId;
      }

      id = R.id.editUsername;
      EditText editUsername = ViewBindings.findChildViewById(rootView, id);
      if (editUsername == null) {
        break missingId;
      }

      id = R.id.register;
      Button register = ViewBindings.findChildViewById(rootView, id);
      if (register == null) {
        break missingId;
      }

      id = R.id.sendCode;
      Button sendCode = ViewBindings.findChildViewById(rootView, id);
      if (sendCode == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      return new ActivityRegisterBinding((LinearLayout) rootView, cover, editCode, editMail,
          editPassword, editUsername, register, sendCode, title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
