// Generated by view binder compiler. Do not edit!
package com.example.sweetfish.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.utils.widget.ImageFilterView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Placeholder;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.sweetfish.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMyBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageFilterView avatar;

  @NonNull
  public final Button collected;

  @NonNull
  public final ImageButton collectedImg;

  @NonNull
  public final TextView email;

  @NonNull
  public final MaterialCardView logOut;

  @NonNull
  public final MaterialCardView management;

  @NonNull
  public final TextView money;

  @NonNull
  public final TextView myPost;

  @NonNull
  public final Placeholder placeHolder;

  @NonNull
  public final Button published;

  @NonNull
  public final ImageButton publishedImg;

  @NonNull
  public final Button purchased;

  @NonNull
  public final ImageButton purchasedImg;

  @NonNull
  public final ImageButton sellImg;

  @NonNull
  public final MaterialCardView setting;

  @NonNull
  public final Button sold;

  @NonNull
  public final Button space;

  @NonNull
  public final MaterialCardView upload;

  @NonNull
  public final TextView userType;

  @NonNull
  public final TextView username;

  private FragmentMyBinding(@NonNull ConstraintLayout rootView, @NonNull ImageFilterView avatar,
      @NonNull Button collected, @NonNull ImageButton collectedImg, @NonNull TextView email,
      @NonNull MaterialCardView logOut, @NonNull MaterialCardView management,
      @NonNull TextView money, @NonNull TextView myPost, @NonNull Placeholder placeHolder,
      @NonNull Button published, @NonNull ImageButton publishedImg, @NonNull Button purchased,
      @NonNull ImageButton purchasedImg, @NonNull ImageButton sellImg,
      @NonNull MaterialCardView setting, @NonNull Button sold, @NonNull Button space,
      @NonNull MaterialCardView upload, @NonNull TextView userType, @NonNull TextView username) {
    this.rootView = rootView;
    this.avatar = avatar;
    this.collected = collected;
    this.collectedImg = collectedImg;
    this.email = email;
    this.logOut = logOut;
    this.management = management;
    this.money = money;
    this.myPost = myPost;
    this.placeHolder = placeHolder;
    this.published = published;
    this.publishedImg = publishedImg;
    this.purchased = purchased;
    this.purchasedImg = purchasedImg;
    this.sellImg = sellImg;
    this.setting = setting;
    this.sold = sold;
    this.space = space;
    this.upload = upload;
    this.userType = userType;
    this.username = username;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_my, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMyBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.avatar;
      ImageFilterView avatar = ViewBindings.findChildViewById(rootView, id);
      if (avatar == null) {
        break missingId;
      }

      id = R.id.collected;
      Button collected = ViewBindings.findChildViewById(rootView, id);
      if (collected == null) {
        break missingId;
      }

      id = R.id.collectedImg;
      ImageButton collectedImg = ViewBindings.findChildViewById(rootView, id);
      if (collectedImg == null) {
        break missingId;
      }

      id = R.id.email;
      TextView email = ViewBindings.findChildViewById(rootView, id);
      if (email == null) {
        break missingId;
      }

      id = R.id.logOut;
      MaterialCardView logOut = ViewBindings.findChildViewById(rootView, id);
      if (logOut == null) {
        break missingId;
      }

      id = R.id.management;
      MaterialCardView management = ViewBindings.findChildViewById(rootView, id);
      if (management == null) {
        break missingId;
      }

      id = R.id.money;
      TextView money = ViewBindings.findChildViewById(rootView, id);
      if (money == null) {
        break missingId;
      }

      id = R.id.myPost;
      TextView myPost = ViewBindings.findChildViewById(rootView, id);
      if (myPost == null) {
        break missingId;
      }

      id = R.id.placeHolder;
      Placeholder placeHolder = ViewBindings.findChildViewById(rootView, id);
      if (placeHolder == null) {
        break missingId;
      }

      id = R.id.published;
      Button published = ViewBindings.findChildViewById(rootView, id);
      if (published == null) {
        break missingId;
      }

      id = R.id.publishedImg;
      ImageButton publishedImg = ViewBindings.findChildViewById(rootView, id);
      if (publishedImg == null) {
        break missingId;
      }

      id = R.id.purchased;
      Button purchased = ViewBindings.findChildViewById(rootView, id);
      if (purchased == null) {
        break missingId;
      }

      id = R.id.purchasedImg;
      ImageButton purchasedImg = ViewBindings.findChildViewById(rootView, id);
      if (purchasedImg == null) {
        break missingId;
      }

      id = R.id.sellImg;
      ImageButton sellImg = ViewBindings.findChildViewById(rootView, id);
      if (sellImg == null) {
        break missingId;
      }

      id = R.id.setting;
      MaterialCardView setting = ViewBindings.findChildViewById(rootView, id);
      if (setting == null) {
        break missingId;
      }

      id = R.id.sold;
      Button sold = ViewBindings.findChildViewById(rootView, id);
      if (sold == null) {
        break missingId;
      }

      id = R.id.space;
      Button space = ViewBindings.findChildViewById(rootView, id);
      if (space == null) {
        break missingId;
      }

      id = R.id.upload;
      MaterialCardView upload = ViewBindings.findChildViewById(rootView, id);
      if (upload == null) {
        break missingId;
      }

      id = R.id.userType;
      TextView userType = ViewBindings.findChildViewById(rootView, id);
      if (userType == null) {
        break missingId;
      }

      id = R.id.username;
      TextView username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      return new FragmentMyBinding((ConstraintLayout) rootView, avatar, collected, collectedImg,
          email, logOut, management, money, myPost, placeHolder, published, publishedImg, purchased,
          purchasedImg, sellImg, setting, sold, space, upload, userType, username);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
